plugins {
    id "com.github.dcendents.android-maven" version "1.5"
}
apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
version = "0.0.2"

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]
    resourcePrefix "clib_"

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
    }
}

dependencies {
    def dependencies = rootProject.ext.dependencies
    def testDependencies = rootProject.ext.testDependencies

    compile fileTree(dir: 'libs', include: ['*.jar'])
    if (testDependencies.espresso) {
        androidTestCompile(testDependencies.espresso, {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
    }
    if (testDependencies.junit) {
        testCompile testDependencies.junit
    }
    // timber log
    if (dependencies.timber) {
        compile dependencies.timber
    }
    // android
    if (dependencies.appcompat_v7) {
        compile dependencies.appcompat_v7
    }
    if (dependencies.design) {
        compile dependencies.design
    }
    if (dependencies.card_view) {
        compile dependencies.card_view
    }
    // glide
    if (dependencies.glide) {
        compile dependencies.glide
    }
    // google
    if (dependencies.gson) {
        compile dependencies.gson
    }
    if (dependencies.dagger) {
        compile dependencies.dagger
    }
    if (dependencies.dagger_compiler) {
        annotationProcessor dependencies.dagger_compiler
    }
    // rx java
    if (dependencies.rxjava) {
        compile dependencies.rxjava
    }
    if (dependencies.rxandroid) {
        compile dependencies.rxandroid
    }
    // green robot
    if (dependencies.greendao) {
        compile dependencies.greendao
    }
    //yf recycler view
    if (dependencies.hi_recycler_view) {
        compile dependencies.hi_recycler_view
    }
    // square
    if (dependencies.okhttp) {
        compile dependencies.okhttp
    }
    if (dependencies.okio) {
        compile dependencies.okio
    }
    if (dependencies.retrofit) {
        compile dependencies.retrofit
    }
    if (dependencies.retrofit2_rxjava2_adapter) {
        compile dependencies.retrofit2_rxjava2_adapter
    }
    if (dependencies.converter_gson) {
        compile dependencies.converter_gson
    }
    if (dependencies.http_log) {
        compile dependencies.http_log
    }
    if (dependencies.butter_knife) {
        compile dependencies.butter_knife
    }
    if (dependencies.butter_knife_compiler) {
        compile dependencies.butter_knife_compiler
    }
}

// publish
// 根节点添加
def siteUrl = 'https://github.com/yefengfreedom/AndroidBaseLibs'    // project homepage
def gitUrl = 'https://github.com/yefengfreedom/AndroidBaseLibs.git' // project git

group = "com.yefeng"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'Android Common Libs'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'yefeng'
                        name 'ye.feng'
                        email 'yefeng.freedom@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "clib"                // project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

